function overloading
-------------------------------------------------------------------------
	Lab Assignment 
		Exercises : 
			01 args arrangements | Define the functions | Read data for functions in main() and call them in main()
			02 args type 		 | Define the functions | Read data for functions in main() and call them in main()
			03 args number 		 | Define the functions | Read data for functions in main() and call them in main()
			04 const 			 | Define the functions | Read data for functions in main() and call them in main()
-------------------------------------------------------------------------
	Definition for function overloading 
		o functions of same names but having many definitions
		or 
		o same named many different functions
	
	1. by arguments 
		by arranagements of the arguments 
			double findSum(int first, double second); //I
			double findSum(double first, int second); //II
			
			Calls:
				double sum1 = findSum(10,10.0); //I 
				double sum2 = findSum(10.0,10); //II
		by types in the arguments 
			int findDifference(int first, int second);//I
			double findDifference(double first, double second);//II
			Calls: 
				int difference1 = findDifference(10,20);
				double difference2 = findDifference(10.0,20.0);
		by number of arguments:
			int findProduct(int first, int second);//I
			int findProduct(int first, int second, int third);//II
			Calls: 
				int product1 = findProduct(2,3); //I 
				int product2 = findProduct(2,3,5); //II 
	2. by const member function 
		by const member function within class:
			Rectange::
				int findArea() const;	//I
				int findArea();			//II
			Calls: 
				Rectangle rect1(5,3);
				int area1 = rect1.findArea(); // II
				
				const Rectangle rect2(4,2);
				int area2 = rect2.findArea(); // I
-------------------------------------------------------------------------	

-------------------------------------------------------------------------
operator overloading 
-------------------------------------------------------------------------
	o new defintion of the 'overloadable operator'
	  for operands of user-defined type 
	o each operator in c++ is associated with the function 
	  when we go for overloading 
-------------------------------------------------------------------------	
	1. member operator function overloading 
	2. friend operator function overloading 
	
	Complex Number: 
		1+i2 
		3+i5
		
		addition operation: 
			add two complex numbers:
				first: 1+i2		
				second: 3+i5
				sum: complex number 
				
				Standard: go for member operator overloading 
					go for friend operator overloading for C programmer migrated to C++
			add complex number with number:
				first: 1+i2		
				second: 10
				sum: complex number 
				
				Standard: go for friend operator overloading 
				Possible: member operator overloading 
	Rational Number: 
		3/4
		1/2
		1/4 
		5/8
-------------------------------------------------------------------------
	General Standard: Dont overload operator 
-------------------------------------------------------------------------
	c-string 
	char firstName[256];
	char lastName[256];
	strcat() - to add two c-strings 
	
		
	C++ STL class "string" is there for handling strings/texts 
		"string" has overloadable "+" operator 
		
-------------------------------------------------------------------------		
	Special Violation you can do when there is highly required 
	Now, Standard: Do overload operator 
-------------------------------------------------------------------------	
	
Exercise:
	a/b	 c/d
	member operator 
	
	1. binary operator 
		+
		a      c      ad + cb
		-   +  -   =  --------
		b      d         bd 
	2. unary operator 
	
	friend opeartor 
	
	1. binary operator 
	2. unary operator 
	
	overload << stream operator : only by friend 
	overload >> stream operator : only by friend 
-------------------------------------------------------------------------	